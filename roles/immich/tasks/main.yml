#########################################################################
# Title:            Sandbox: Immich                                     #
# Author(s):        CHAIR/Raneydazed                                    #
# URL:              https://github.com/saltyorg/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Import Redis Role
  ansible.builtin.include_role:
    name: redis
  vars:
    redis_instances: ["{{ immich_name }}_redis"]
    redis_docker_image_tag: "7-alpine"
    redis_paths_folder: "{{ immich_name }}"
    redis_paths_location: "{{ server_appdata_path }}/{{ redis_paths_folder }}/redis"

- name: Import PostgreSQL Role
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: ["{{ immich_name }}_postgres"]
    postgres_docker_env_db: "{{ immich_name }}"
    postgres_docker_image_tag: "16"
    postgres_paths_folder: "{{ immich_name }}"
    postgres_paths_location: "{{ server_appdata_path }}/{{ postgres_paths_folder }}/postgres"

- name: "Generate Secret Key for typesense"
  ansible.builtin.shell: "openssl rand -base64 45"
  register: immich_typesense_secret_key

- name: Import Immich Machine Learning Role
  ansible.builtin.include_role:
    name: immich_machine_learning
  vars:
    immich_machine_learning_name: "{{ immich_name }}_machine_learning"
    immich_machine_learning_docker_image_tag: "release"
    immich_machine_learning_paths_folder: "{{ immich_name }}"
    immich_machine_learning_paths_location: "{{ server_appdata_path }}/{{ immich_machine_learning_paths_folder }}/machine-learning"
    immich_machine_learning_docker_envs_default:
      MACHINE_LEARNING_HOST: "{{ immich_name }}_machine_learning"
      MPLCONFIGDIR: "/map"
      TZ: "America/Chicago"
    immich_machine_learning_docker_volumes_default:
      - "{{ immich_machine_learning_paths_location }}/.map:/map"
      - "{{ immich_machine_learning_paths_location }}/cache:/cache"

- name: Import Immich Typesense Role
  ansible.builtin.include_role:
    name: immich_typesense
  vars:
    immich_typesense_name: "{{ immich_name }}_typesense"
    immich_typesense_paths_folder: "{{ immich_name }}"
    immich_typesense_paths_location: "{{ server_appdata_path }}/{{ immich_typesense_paths_folder }}/typesense"
    immich_typesense_docker_image_tag: "0.25.1"
    immich_typesense_docker_envs_default:
      TYPESENSE_DATA_DIR: "/data"
      TYPESENSE_API_KEY: "{{ immich_typesense_secret_key.stdout }}"
      GLOG_minloglevel: "1"
      TZ: "America/Chicago"
    immich_typesense_docker_volumes_default:
      - "{{ immich_typesense_paths_location }}:/data"

- name: Import Immich Microservices Role
  ansible.builtin.include_role:
    name: immich_microservices
  vars:
    immich_microservices_name: "{{ immich_name }}_microservices"
    immich_microservices_paths_folder: "{{ immich_name }}"
    immich_microservices_paths_location: "{{ server_appdata_path }}/{{ immich_microservices_paths_folder }}/microservices"
    immich_microservices_docker_envs_default:
      LOG_LEVEL: "log"
      DB_HOSTNAME: "{{ immich_name }}_postgres"
      DB_USERNAME: "{{ postgres_docker_env_user }}"
      DB_PASSWORD: "{{ postgres_docker_env_password }}"
      DB_DATABASE_NAME: "{{ immich_name }}"
      REDIS_HOSTNAME: "{{ immich_name }}_redis"
      TYPESENSE_HOST: "{{ immich_typesense_name }}"
      TYPESENSE_API_KEY: "{{ immich_typesense_secret_key.stdout }}"
      UPLOAD_LOCATION: "/mnt/unionfs/Media/Photos"
      TYPESENSE_ENABLED: "true"
      TZ: "America/Chicago"
    immich_microservices_docker_volumes_default:
      - "/mnt/unionfs/Media/Photos:/usr/src/app/upload"
      - "{{ immich_microservices_paths_location }}/.dump:/usr/src/app/.reverse-geocoding-dump"

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('vars', role_name + '_dns_record') }}"
    dns_zone: "{{ lookup('vars', role_name + '_dns_zone') }}"
    dns_proxy: "{{ lookup('vars', role_name + '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
